/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface 3f1618f3ab09735d63c93a014d82c4f2Request {
    id: number;
}

export interface 5baf39dba56d410a1bf7eb6c1cfe6507Request {
    name?: string;
}

export interface 81e573317d0ccd3a1a3bb21296048765Request {
    id: number;
}

export interface Abe283cafa8b21156dee4a870c67a59aRequest {
    id: number;
    name?: string;
}

/**
 * 
 */
export class AssetApi extends runtime.BaseAPI {

    /**
     * Get Asset
     * getAssetItem
     */
    async _3f1618f3ab09735d63c93a014d82c4f2Raw(requestParameters: 3f1618f3ab09735d63c93a014d82c4f2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling _3f1618f3ab09735d63c93a014d82c4f2.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/assets/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Get Asset
     * getAssetItem
     */
    async _3f1618f3ab09735d63c93a014d82c4f2(requestParameters: 3f1618f3ab09735d63c93a014d82c4f2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._3f1618f3ab09735d63c93a014d82c4f2Raw(requestParameters, initOverrides);
    }

    /**
     * Create Asset
     * createAsset
     */
    async _5baf39dba56d410a1bf7eb6c1cfe6507Raw(requestParameters: 5baf39dba56d410a1bf7eb6c1cfe6507Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters.name !== undefined) {
            formParams.append('name', requestParameters.name as any);
        }

        const response = await this.request({
            path: `/assets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create Asset
     * createAsset
     */
    async _5baf39dba56d410a1bf7eb6c1cfe6507(requestParameters: 5baf39dba56d410a1bf7eb6c1cfe6507Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._5baf39dba56d410a1bf7eb6c1cfe6507Raw(requestParameters, initOverrides);
    }

    /**
     * Delete Asset
     * deleteAsset
     */
    async _81e573317d0ccd3a1a3bb21296048765Raw(requestParameters: 81e573317d0ccd3a1a3bb21296048765Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling _81e573317d0ccd3a1a3bb21296048765.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/assets/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete Asset
     * deleteAsset
     */
    async _81e573317d0ccd3a1a3bb21296048765(requestParameters: 81e573317d0ccd3a1a3bb21296048765Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._81e573317d0ccd3a1a3bb21296048765Raw(requestParameters, initOverrides);
    }

    /**
     * Update Asset
     * updateAsset
     */
    async abe283cafa8b21156dee4a870c67a59aRaw(requestParameters: Abe283cafa8b21156dee4a870c67a59aRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling abe283cafa8b21156dee4a870c67a59a.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters.name !== undefined) {
            formParams.append('name', requestParameters.name as any);
        }

        const response = await this.request({
            path: `/assets/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Update Asset
     * updateAsset
     */
    async abe283cafa8b21156dee4a870c67a59a(requestParameters: Abe283cafa8b21156dee4a870c67a59aRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.abe283cafa8b21156dee4a870c67a59aRaw(requestParameters, initOverrides);
    }

    /**
     * Get all Assets
     * getAssetList
     */
    async bf2ac34b89b5240c36742fc783b640ccRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/assets`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Get all Assets
     * getAssetList
     */
    async bf2ac34b89b5240c36742fc783b640cc(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.bf2ac34b89b5240c36742fc783b640ccRaw(initOverrides);
    }

}
