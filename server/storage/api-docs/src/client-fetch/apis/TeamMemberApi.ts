/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface 504f1e2454344367b03491dac070cd56Request {
    id: number;
}

export interface 793a2f9812ee40dbbf2e79904985274cRequest {
    name?: string;
}

export interface 87f4ab442a55d282e1ebade1a87da9c3Request {
    id: number;
}

export interface D17af343b44e4ce310e0f9288ec00d3aRequest {
    id: number;
    name?: string;
}

/**
 * 
 */
export class TeamMemberApi extends runtime.BaseAPI {

    /**
     * Get TeamMember
     * getTeamMemberItem
     */
    async _504f1e2454344367b03491dac070cd56Raw(requestParameters: 504f1e2454344367b03491dac070cd56Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling _504f1e2454344367b03491dac070cd56.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/teamMembers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Get TeamMember
     * getTeamMemberItem
     */
    async _504f1e2454344367b03491dac070cd56(requestParameters: 504f1e2454344367b03491dac070cd56Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._504f1e2454344367b03491dac070cd56Raw(requestParameters, initOverrides);
    }

    /**
     * Get all TeamMembers
     * getTeamMemberList
     */
    async _50e42d2216f357cb3fc2c9d04e56d568Raw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/teamMembers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Get all TeamMembers
     * getTeamMemberList
     */
    async _50e42d2216f357cb3fc2c9d04e56d568(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._50e42d2216f357cb3fc2c9d04e56d568Raw(initOverrides);
    }

    /**
     * Create TeamMember
     * createTeamMember
     */
    async _793a2f9812ee40dbbf2e79904985274cRaw(requestParameters: 793a2f9812ee40dbbf2e79904985274cRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters.name !== undefined) {
            formParams.append('name', requestParameters.name as any);
        }

        const response = await this.request({
            path: `/teamMembers`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create TeamMember
     * createTeamMember
     */
    async _793a2f9812ee40dbbf2e79904985274c(requestParameters: 793a2f9812ee40dbbf2e79904985274cRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._793a2f9812ee40dbbf2e79904985274cRaw(requestParameters, initOverrides);
    }

    /**
     * Delete TeamMember
     * deleteTeamMember
     */
    async _87f4ab442a55d282e1ebade1a87da9c3Raw(requestParameters: 87f4ab442a55d282e1ebade1a87da9c3Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling _87f4ab442a55d282e1ebade1a87da9c3.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/teamMembers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete TeamMember
     * deleteTeamMember
     */
    async _87f4ab442a55d282e1ebade1a87da9c3(requestParameters: 87f4ab442a55d282e1ebade1a87da9c3Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._87f4ab442a55d282e1ebade1a87da9c3Raw(requestParameters, initOverrides);
    }

    /**
     * Update TeamMember
     * updateTeamMember
     */
    async d17af343b44e4ce310e0f9288ec00d3aRaw(requestParameters: D17af343b44e4ce310e0f9288ec00d3aRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling d17af343b44e4ce310e0f9288ec00d3a.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters.name !== undefined) {
            formParams.append('name', requestParameters.name as any);
        }

        const response = await this.request({
            path: `/teamMembers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Update TeamMember
     * updateTeamMember
     */
    async d17af343b44e4ce310e0f9288ec00d3a(requestParameters: D17af343b44e4ce310e0f9288ec00d3aRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.d17af343b44e4ce310e0f9288ec00d3aRaw(requestParameters, initOverrides);
    }

}
